1
0:00:00,000 -->  0:00:02,000
大家好,我是Bestian

2
0:00:02,000 -->  0:00:04,000
今天我要分享的題目是

3
0:00:04,000 -->  0:00:06,000
如何在AI浪潮下

4
0:00:06,000 -->  0:00:08,000
協力學習

5
0:00:08,000 -->  0:00:10,000
氛圍編程與協作編程

6
0:00:10,000 -->  0:00:12,000
在Audery

7
0:00:12,000 -->  0:00:14,000
的一個詩裡面

8
0:00:14,000 -->  0:00:16,000
提到說

9
0:00:16,000 -->  0:00:18,000
看到機器學習，我們協力學習

10
0:00:18,000 -->  0:00:20,000
我很喜歡這句話

11
0:00:20,000 -->  0:00:22,000
但問題在於說

12
0:00:22,000 -->  0:00:24,000
協力學習這件事情要怎麼做呢

13
0:00:24,000 -->  0:00:26,000
好

14
0:00:26,000 -->  0:00:28,000
我從AI輔助駕駛

15
0:00:28,000 -->  0:00:30,000
發生的車禍談起好了

16
0:00:30,000 -->  0:00:32,000
為什麼AI駕駛

17
0:00:32,000 -->  0:00:34,000
會發生車禍

18
0:00:34,000 -->  0:00:36,000
AI不是很厲害嗎

19
0:00:36,000 -->  0:00:38,000
那其實

20
0:00:38,000 -->  0:00:40,000
AI輔助駕駛它是有風險的

21
0:00:40,000 -->  0:00:42,000
比方說他的訓練資料裡面

22
0:00:42,000 -->  0:00:44,000
可能不包含一些

23
0:00:44,000 -->  0:00:46,000
對人來說顯而易見

24
0:00:46,000 -->  0:00:48,000
就知道是危險的東西

25
0:00:48,000 -->  0:00:50,000
所以當人放棄了

26
0:00:50,000 -->  0:00:52,000
自己主要駕駛的這個責任心

27
0:00:52,000 -->  0:00:54,000
過度依賴

28
0:00:54,000 -->  0:00:56,000
輔助功能的時候

29
0:00:56,000 -->  0:00:58,000
就可能降低駕駛的警覺性

30
0:00:58,000 -->  0:01:00,000
然後AI錯判環境的時候

31
0:01:00,000 -->  0:01:02,000
人類一時反應不來就造成了

32
0:01:02,000 -->  0:01:04,000
安全上的顧慮

33
0:01:04,000 -->  0:01:06,000
那寫程式也差不多

34
0:01:06,000 -->  0:01:08,000
在早期沒有AI的時候

35
0:01:08,000 -->  0:01:10,000
我們就好像在雕刻作品一樣

36
0:01:10,000 -->  0:01:12,000
這叫做手刻編程

37
0:01:12,000 -->  0:01:14,000
那麼到現在

38
0:01:14,000 -->  0:01:16,000
流行的叫做氛圍編程

39
0:01:16,000 -->  0:01:18,000
好像在一個氣氛之下

40
0:01:18,000 -->  0:01:20,000
只要跟AI說話程式碼就生出來了

41
0:01:20,000 -->  0:01:22,000
感覺很浪漫

42
0:01:22,000 -->  0:01:24,000
有的時候也非常管用

43
0:01:24,000 -->  0:01:26,000
但有的時候當他不管用的時候

44
0:01:26,000 -->  0:01:28,000
我們也要知道我們該怎麼辦

45
0:01:28,000 -->  0:01:30,000
從2022年

46
0:01:30,000 -->  0:01:32,000
GitHub Copilot作為一個

47
0:01:32,000 -->  0:01:34,000
VS Code套件出來之後

48
0:01:34,000 -->  0:01:36,000
當時的AI

49
0:01:36,000 -->  0:01:38,000
它可以猜測程式的走向

50
0:01:38,000 -->  0:01:40,000
可以自動補完

51
0:01:40,000 -->  0:01:42,000
可以用討論的方式來生成編碼

52
0:01:42,000 -->  0:01:44,000
但是在實際上

53
0:01:44,000 -->  0:01:46,000
使用的時候呢它有的時候也會猜錯

54
0:01:46,000 -->  0:01:48,000
所以呢

55
0:01:48,000 -->  0:01:50,000
我個人的體驗就是說

56
0:01:50,000 -->  0:01:52,000
在應用的過程當中需要很清楚知道

57
0:01:52,000 -->  0:01:54,000
自己本來要做什麼

58
0:01:54,000 -->  0:01:56,000
以免被導到一個錯誤的方向

59
0:01:56,000 -->  0:01:58,000
在2023年的時候

60
0:01:58,000 -->  0:02:00,000
Cursor AI編輯器

61
0:02:00,000 -->  0:02:02,000
提出了AI先行的概念

62
0:02:02,000 -->  0:02:04,000
他對整個專案理解

63
0:02:04,000 -->  0:02:06,000
在範圍内

64
0:02:06,000 -->  0:02:08,000
可以代工整個檔案的編碼

65
0:02:08,000 -->  0:02:10,000
那它的概念就是AI先做

66
0:02:10,000 -->  0:02:12,000
人再修

67
0:02:12,000 -->  0:02:14,000
那這個概念非常的好

68
0:02:14,000 -->  0:02:16,000
而且它AI做得也相當成功

69
0:02:16,000 -->  0:02:18,000
但是「人工再修」這件事情

70
0:02:18,000 -->  0:02:20,000
也是很重要的

71
0:02:20,000 -->  0:02:22,000
它畢竟不一定是百分之百完美的東西

72
0:02:22,000 -->  0:02:24,000
有的時候還是會有幻覺

73
0:02:24,000 -->  0:02:26,000
有的時候要的跟你

74
0:02:26,000 -->  0:02:28,000
原本想的還是不太一樣

75
0:02:28,000 -->  0:02:30,000
所以呢作為一個程式師

76
0:02:30,000 -->  0:02:32,000
所謂「人工再修」這件事情呢

77
0:02:32,000 -->  0:02:34,000
其實是蠻必要的

78
0:02:34,000 -->  0:02:36,000
那這也是眉角所在

79
0:02:36,000 -->  0:02:38,000
在

80
0:02:38,000 -->  0:02:40,000
在2024年Windsurf Cascade

81
0:02:40,000 -->  0:02:42,000
出來

82
0:02:42,000 -->  0:02:44,000
開發者真的可以好像純聊天

83
0:02:44,000 -->  0:02:46,000
不用碰程式碼

84
0:02:46,000 -->  0:02:48,000
AI先行，人也不必修

85
0:02:48,000 -->  0:02:50,000
人測試了之後

86
0:02:50,000 -->  0:02:52,000
给了方向

87
0:02:52,000 -->  0:02:54,000
AI自己會修

88
0:02:54,000 -->  0:02:56,000
從那個時候開始

89
0:02:56,000 -->  0:02:58,000
Cursor也在模仿Cascade

90
0:02:58,000 -->  0:03:00,000
推出了 Agent

91
0:03:00,000 -->  0:03:02,000
代理人的這個模式

92
0:03:02,000 -->  0:03:04,000
所以這兩個

93
0:03:04,000 -->  0:03:06,000
編輯器還有些其他的

94
0:03:06,000 -->  0:03:08,000
AI功能

95
0:03:08,000 -->  0:03:10,000
相互之間模仿相互之間競爭

96
0:03:10,000 -->  0:03:12,000
引發了程式師的

97
0:03:12,000 -->  0:03:14,000
氛圍編程的一種風潮

98
0:03:14,000 -->  0:03:16,000
也就是所謂的 Vibe Coding

99
0:03:16,000 -->  0:03:18,000
讓大家好像

100
0:03:18,000 -->  0:03:20,000
欸，真的

101
0:03:20,000 -->  0:03:22,000
門檻降低了很多

102
0:03:22,000 -->  0:03:24,000
不需要是專家

103
0:03:24,000 -->  0:03:26,000
你只要會提出需求，有一個構想

104
0:03:26,000 -->  0:03:28,000
設計師就可以變成

105
0:03:28,000 -->  0:03:30,000
程式設計師了

106
0:03:30,000 -->  0:03:32,000
那Vibe Coding

107
0:03:32,000 -->  0:03:34,000
也就是氛圍編程這個事情的浪漫

108
0:03:34,000 -->  0:03:36,000
它確實是很浪漫

109
0:03:36,000 -->  0:03:38,000
它有快速的反饋迴圈

110
0:03:38,000 -->  0:03:40,000
你的多巴胺可以

111
0:03:40,000 -->  0:03:42,000
快速的得到刺激

112
0:03:42,000 -->  0:03:44,000
想法快速的就變成作品

113
0:03:44,000 -->  0:03:46,000
在這個圖上

114
0:03:46,000 -->  0:03:48,000
我們可以看到構想

115
0:03:48,000 -->  0:03:50,000
往複雜跟好的方向

116
0:03:50,000 -->  0:03:52,000
發展之後就是叫做擴展

117
0:03:52,000 -->  0:03:54,000
那AI可以

118
0:03:54,000 -->  0:03:56,000
快速的去幫你打樣

119
0:03:56,000 -->  0:03:58,000
跟作出擴展

120
0:03:58,000 -->  0:04:00,000
而氛圍編程的現實就是在擴展

121
0:04:00,000 -->  0:04:02,000
快速起步之後

122
0:04:02,000 -->  0:04:04,000
發生的事情也就是所謂的

123
0:04:04,000 -->  0:04:06,000
維護障礙也就是

124
0:04:06,000 -->  0:04:08,000
其實當你想要擴充、增加

125
0:04:08,000 -->  0:04:10,000
刪減、細修

126
0:04:10,000 -->  0:04:12,000
也就是「人工去修」的部分的時候

127
0:04:12,000 -->  0:04:14,000
你會發現說

128
0:04:14,000 -->  0:04:16,000
程式碼已經不知不覺已經變成

129
0:04:16,000 -->  0:04:18,000
一個檔案1000多行了

130
0:04:18,000 -->  0:04:20,000
因為AI很容易一次就生成一千多行的程式碼

131
0:04:20,000 -->  0:04:22,000
那這個時候

132
0:04:22,000 -->  0:04:24,000
也會遇到規模的限制

133
0:04:24,000 -->  0:04:26,000
因為AI能夠

134
0:04:26,000 -->  0:04:28,000
掌握的規模是有大小限制的

135
0:04:28,000 -->  0:04:30,000
它能同時

136
0:04:30,000 -->  0:04:32,000
處理的檔案數量

137
0:04:32,000 -->  0:04:34,000
跟行數合在一起是有限制的

138
0:04:34,000 -->  0:04:36,000
它就算對你的 codebase

139
0:04:36,000 -->  0:04:38,000
整個有一個概念但是它只是一個

140
0:04:38,000 -->  0:04:40,000
模糊的概念並不是掌握了全部

141
0:04:40,000 -->  0:04:42,000
當你的專案很大的時候

142
0:04:42,000 -->  0:04:44,000
第三個就是人際的限制

143
0:04:44,000 -->  0:04:46,000
就是說OK今天

144
0:04:46,000 -->  0:04:48,000
AI可能幫你幫到一個程度

145
0:04:48,000 -->  0:04:50,000
都做得非常好可是在

146
0:04:50,000 -->  0:04:52,000
當你想要做一些它做不到的事情

147
0:04:52,000 -->  0:04:54,000
你知不知道說

148
0:04:54,000 -->  0:04:56,000
可以找到人去問說

149
0:04:56,000 -->  0:04:58,000
有些人他其實知道怎麼辦

150
0:04:58,000 -->  0:05:00,000
那如果你很習慣的

151
0:05:00,000 -->  0:05:02,000
就是一對一的跟AI做事

152
0:05:02,000 -->  0:05:04,000
那你就會發現說

153
0:05:04,000 -->  0:05:06,000
你好像不敢去問人說

154
0:05:06,000 -->  0:05:08,000
我下一步該怎麼辦

155
0:05:08,000 -->  0:05:10,000
那這樣你就會受到人際上的一些限制

156
0:05:10,000 -->  0:05:12,000
這個

157
0:05:12,000 -->  0:05:14,000
那構想

158
0:05:14,000 -->  0:05:16,000
擴展之後

159
0:05:16,000 -->  0:05:18,000
常常會發生一步叫作「過度擴展」

160
0:05:18,000 -->  0:05:20,000
那AI也很

161
0:05:20,000 -->  0:05:22,000
很容易把專案過度擴展

162
0:05:22,000 -->  0:05:24,000
也就是一行程式

163
0:05:24,000 -->  0:05:26,000
擴展成十行程式

164
0:05:26,000 -->  0:05:28,000
十行程式擴展成百行

165
0:05:28,000 -->  0:05:30,000
到千行的時候

166
0:05:30,000 -->  0:05:32,000
人類自己已經看不太懂

167
0:05:32,000 -->  0:05:34,000
也很難去維護了

168
0:05:34,000 -->  0:05:36,000
那這個時候我們可以做的事情就是

169
0:05:36,000 -->  0:05:38,000
零件化

170
0:05:38,000 -->  0:05:40,000
之前在手刻的時代

171
0:05:40,000 -->  0:05:42,000
人類所發明出來的框架

172
0:05:42,000 -->  0:05:44,000
不管是Angular, React或者是Vue

173
0:05:44,000 -->  0:05:46,000
這些框架

174
0:05:46,000 -->  0:05:48,000
基本上就是為了要讓程式

175
0:05:48,000 -->  0:05:50,000
可以大事化小

176
0:05:50,000 -->  0:05:52,000
小事不會化無啦

177
0:05:52,000 -->  0:05:54,000
但是小事就可以變成

178
0:05:54,000 -->  0:05:56,000
一個一個小事去解決它

179
0:05:56,000 -->  0:05:58,000
把大事變成小事的分割

180
0:05:58,000 -->  0:06:00,000
把一個

181
0:06:00,000 -->  0:06:02,000
千行的檔案變成

182
0:06:02,000 -->  0:06:04,000
兩個600行的檔案

183
0:06:04,000 -->  0:06:06,000
互相之間的组合

184
0:06:06,000 -->  0:06:08,000
那我們作為不管是人

185
0:06:08,000 -->  0:06:10,000
或者是AI都可以比較好的

186
0:06:10,000 -->  0:06:12,000
去理解跟掌握

187
0:06:12,000 -->  0:06:14,000
那這個事情也稱為「重構」

188
0:06:14,000 -->  0:06:16,000
如果你熟悉重構

189
0:06:16,000 -->  0:06:18,000
你也可以請AI

190
0:06:18,000 -->  0:06:20,000
幫助你做重構

191
0:06:20,000 -->  0:06:22,000
那遇到

192
0:06:22,000 -->  0:06:24,000
Vibe Coding卡關的時候

193
0:06:24,000 -->  0:06:26,000
我們可能怎麼辦呢

194
0:06:26,000 -->  0:06:28,000
我們可以做三件事情一個叫做重設方向

195
0:06:28,000 -->  0:06:30,000
一個叫做閱讀說明文件

196
0:06:30,000 -->  0:06:32,000
那第三個

197
0:06:32,000 -->  0:06:34,000
就是向真人求助

198
0:06:34,000 -->  0:06:36,000
重設方向的時候

199
0:06:36,000 -->  0:06:38,000
我們要知道說

200
0:06:38,000 -->  0:06:40,000
程式其實有框架層次

201
0:06:40,000 -->  0:06:42,000
原始碼層次

202
0:06:42,000 -->  0:06:44,000
那框架層次呢就有點像打地基

203
0:06:44,000 -->  0:06:46,000
你選用什麼樣的地基

204
0:06:46,000 -->  0:06:48,000
他就直接決定了

205
0:06:48,000 -->  0:06:50,000
你後面可以做什麼事情

206
0:06:50,000 -->  0:06:52,000
就像如果你要蓋一個高樓大厦

207
0:06:52,000 -->  0:06:54,000
而你的地基是一個山中小屋的地基

208
0:06:54,000 -->  0:06:56,000
那你就不太可能蓋到

209
0:06:56,000 -->  0:06:58,000
25、26層在這個地基之上

210
0:06:58,000 -->  0:07:00,000
所以框架的選用其實很重要

211
0:07:00,000 -->  0:07:02,000
有的框架是伺服器層級的

212
0:07:02,000 -->  0:07:04,000
有的是瀏覽器層級的

213
0:07:04,000 -->  0:07:06,000
有的是專門生成靜態內容的

214
0:07:06,000 -->  0:07:08,000
有的是做動態功能的

215
0:07:08,000 -->  0:07:10,000
那

216
0:07:10,000 -->  0:07:12,000
有了框架之後在每個框架

217
0:07:12,000 -->  0:07:14,000
底下才會有所謂的套件

218
0:07:14,000 -->  0:07:16,000
有些套件是專門處理

219
0:07:16,000 -->  0:07:18,000
HTTP的一些

220
0:07:18,000 -->  0:07:20,000
request啊

221
0:07:20,000 -->  0:07:22,000
就是

222
0:07:22,000 -->  0:07:24,000
請求啊或者是有的是

223
0:07:24,000 -->  0:07:26,000
做地圖呈現的、日曆呈現的

224
0:07:26,000 -->  0:07:28,000
各式各樣

225
0:07:28,000 -->  0:07:30,000
資訊視覺化的套件等等

226
0:07:30,000 -->  0:07:32,000
AI也很喜歡使用套件

227
0:07:32,000 -->  0:07:34,000
但是如果套件

228
0:07:34,000 -->  0:07:36,000
沒有辦法精準的解决你的問題

229
0:07:36,000 -->  0:07:38,000
或者套件還不夠用的時候

230
0:07:38,000 -->  0:07:40,000
我們還是會進入原始碼層次

231
0:07:40,000 -->  0:07:42,000
好

232
0:07:42,000 -->  0:07:44,000
到了原始碼層次

233
0:07:44,000 -->  0:07:46,000
閱讀說明文件就變得很重要了

234
0:07:46,000 -->  0:07:48,000
因為每一個套件的使用方式

235
0:07:48,000 -->  0:07:50,000
或者是

236
0:07:50,000 -->  0:07:52,000
每一個相關的範例程式碼

237
0:07:52,000 -->  0:07:54,000
如果你要

238
0:07:54,000 -->  0:07:56,000
做微調的話你還是必須要對

239
0:07:56,000 -->  0:07:58,000
說明文件有一些概念

240
0:07:58,000 -->  0:08:00,000
去閱讀它

241
0:08:00,000 -->  0:08:02,000
而且當AI

242
0:08:02,000 -->  0:08:04,000
有的時候會有幻覺嘛大家都知道

243
0:08:04,000 -->  0:08:06,000
但是說明文件經過

244
0:08:06,000 -->  0:08:08,000
許多人的校對他基本上不太

245
0:08:08,000 -->  0:08:10,000
會有幻覺的問題

246
0:08:10,000 -->  0:08:12,000
所以閱讀官方說明文件是

247
0:08:12,000 -->  0:08:14,000
蠻重要的事情

248
0:08:14,000 -->  0:08:16,000
另外就是向人求助

249
0:08:16,000 -->  0:08:18,000
那麼向人求助的過程當中呢

250
0:08:18,000 -->  0:08:20,000
我們會對對方的角色不管是

251
0:08:20,000 -->  0:08:22,000
多資深的工程師他畢竟不是神燈巨靈

252
0:08:22,000 -->  0:08:24,000
所以我們會對對方的

253
0:08:24,000 -->  0:08:26,000
角色有個預設

254
0:08:26,000 -->  0:08:28,000
不會提出太過分的請求

255
0:08:28,000 -->  0:08:30,000
對對方的認知承載力有一個預設

256
0:08:30,000 -->  0:08:32,000
不會把整個檔案zip之後呢

257
0:08:32,000 -->  0:08:34,000
丟過去給他說

258
0:08:34,000 -->  0:08:36,000
請你幫我看整個專案那基本上是

259
0:08:36,000 -->  0:08:38,000
不太可能的事情

260
0:08:38,000 -->  0:08:40,000
我們會讓我們的問題聚焦

261
0:08:40,000 -->  0:08:42,000
清晰化變成說

262
0:08:42,000 -->  0:08:44,000
OK 今天我在應用哪個套件的時候

263
0:08:44,000 -->  0:08:46,000
出現了什麼樣的Bug

264
0:08:46,000 -->  0:08:48,000
然後可能就把那一段程式碼截在

265
0:08:48,000 -->  0:08:50,000
Codepen上或者是

266
0:08:50,000 -->  0:08:52,000
JSFiddle上啊

267
0:08:52,000 -->  0:08:54,000
後端貼過去给他讓他去

268
0:08:54,000 -->  0:08:56,000
根據你的這個有問題的部份

269
0:08:56,000 -->  0:08:58,000
做精準處理

270
0:08:58,000 -->  0:09:00,000
那這個習慣呢

271
0:09:00,000 -->  0:09:02,000
對於我們跟AI溝通也是

272
0:09:02,000 -->  0:09:04,000
是很有幫助的

273
0:09:04,000 -->  0:09:06,000
好那接下來介绍一下協作編程

274
0:09:06,000 -->  0:09:08,000
我用蜜蜂做為圖象

275
0:09:08,000 -->  0:09:10,000
就是因為

276
0:09:10,000 -->  0:09:12,000
蜜蜂是一個社會性很高的動物

277
0:09:12,000 -->  0:09:14,000
單獨一隻蜜蜂能做的有限

278
0:09:14,000 -->  0:09:16,000
很多隻蜜蜂合作起來

279
0:09:16,000 -->  0:09:18,000
能做的事情就非常的

280
0:09:18,000 -->  0:09:20,000
多

281
0:09:20,000 -->  0:09:22,000
那作為人的經驗

282
0:09:22,000 -->  0:09:24,000
我們透過合作的過程當中

283
0:09:24,000 -->  0:09:26,000
可以交互傳遞

284
0:09:26,000 -->  0:09:28,000
那這個跟我們跟 AI 合作

285
0:09:28,000 -->  0:09:30,000
是不太一樣的

286
0:09:30,000 -->  0:09:32,000
跟 AI 合作你跟它的對話可能是

287
0:09:32,000 -->  0:09:34,000
成為 AI 的訓練資料

288
0:09:34,000 -->  0:09:36,000
跟人合作的時候呢我們作為

289
0:09:36,000 -->  0:09:38,000
人的經驗就會交互傳遞成

290
0:09:38,000 -->  0:09:40,000
彼此的學習檔案

291
0:09:40,000 -->  0:09:42,000
學習的基礎

292
0:09:42,000 -->  0:09:44,000
那怎麼樣協作編程呢？

293
0:09:44,000 -->  0:09:46,000
可以從傳統的

294
0:09:46,000 -->  0:09:48,000
傳統的Double Hacking

295
0:09:48,000 -->  0:09:50,000
也就是是兩個人合作

296
0:09:50,000 -->  0:09:52,000
不管是在實體空間

297
0:09:52,000 -->  0:09:54,000
或者是遠端連線的方式

298
0:09:54,000 -->  0:09:56,000
進行Double Hacking

299
0:09:56,000 -->  0:09:58,000
或者是參與小型的黑客松

300
0:09:58,000 -->  0:10:00,000
或者是與真人一面對話

301
0:10:00,000 -->  0:10:02,000
一面協作

302
0:10:02,000 -->  0:10:04,000
不管是double hacking

303
0:10:04,000 -->  0:10:06,000
或者是小型黑客松他都是與真人

304
0:10:06,000 -->  0:10:08,000
一面對話一面協作的過程

305
0:10:08,000 -->  0:10:10,000
那這樣的過程

306
0:10:10,000 -->  0:10:12,000
可以讓我們在

307
0:10:12,000 -->  0:10:14,000
人類跟人類之間

308
0:10:14,000 -->  0:10:16,000
所謂的傳道授業解惑

309
0:10:16,000 -->  0:10:18,000
這方面發生

310
0:10:18,000 -->  0:10:20,000
真正的有品質的

311
0:10:20,000 -->  0:10:22,000
互動

312
0:10:22,000 -->  0:10:24,000
總而言之

313
0:10:24,000 -->  0:10:26,000
如果你覺得「開發」是一件孤單的事

314
0:10:26,000 -->  0:10:28,000
AI

315
0:10:28,000 -->  0:10:30,000
没有辦法作為人際的替代

316
0:10:30,000 -->  0:10:32,000
還是

317
0:10:32,000 -->  0:10:34,000
和真人聯絡吧

318
0:10:34,000 -->  0:10:36,000
聯絡有很多種

319
0:10:36,000 -->  0:10:38,000
從發一個短訊開始也算是聯絡

320
0:10:38,000 -->  0:10:40,000
比方說在Github社群上面

321
0:10:40,000 -->  0:10:42,000
留一個言他會自動發Email

322
0:10:42,000 -->  0:10:44,000
給那個專案相關的人

323
0:10:44,000 -->  0:10:46,000
或者是贴一個Github議題

324
0:10:46,000 -->  0:10:48,000
發一個短訊、邀約同步連線

325
0:10:48,000 -->  0:10:50,000
諸如此類

326
0:10:50,000 -->  0:10:52,000
不要害怕伸出你的手

327
0:10:52,000 -->  0:10:54,000
因為在你的遠端

328
0:10:54,000 -->  0:10:56,000
可能有另外一隻手

329
0:10:56,000 -->  0:10:58,000
已經準備好跟你握手

330
0:10:58,000 -->  0:11:00,000
就算沒有

331
0:11:00,000 -->  0:11:02,000
你其實並沒有任何的損失

332
0:11:02,000 -->  0:11:04,000
那當有的時候呢

333
0:11:04,000 -->  0:11:06,000
你的開發經驗就可以進入Double Hacking

334
0:11:06,000 -->  0:11:08,000
進入一個

335
0:11:08,000 -->  0:11:10,000
跟真人產生交流

336
0:11:10,000 -->  0:11:12,000
不會只是說

337
0:11:12,000 -->  0:11:14,000
我只能跟AI互動

338
0:11:14,000 -->  0:11:16,000
那我們就可以作為

339
0:11:16,000 -->  0:11:18,000
「人」的角色

340
0:11:18,000 -->  0:11:20,000
互相之間來協作

341
0:11:20,000 -->  0:11:22,000
好

342
0:11:22,000 -->  0:11:24,000
謝謝大家

343
0:11:24,000 -->  0:11:26,000
本簡報以創用授權分享

344
0:11:26,000 -->  0:11:28,000
歡迎著名出處、以相同方式分享

345
0:11:28,000 -->  0:11:30,000
謝謝

346
0:11:30,000 -->  0:11:32,000
謝謝